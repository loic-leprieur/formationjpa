package fr.dawan.exercice_jpa;

import java.time.LocalTime;

import fr.dawan.exercice_jpa.entities.Commande;
import fr.dawan.exercice_jpa.entities.Ingredient;
import fr.dawan.exercice_jpa.entities.Pizza;
import fr.dawan.exercice_jpa.enums.Base;
import jakarta.persistence.EntityManager;
import jakarta.persistence.EntityManagerFactory;
import jakarta.persistence.EntityTransaction;
import jakarta.persistence.Persistence;

/**
 * Création de commandes de pizzas pour un restaurant
 *
 */
public class Main02 {
    public static void main(String[] args) {
        // Création EntityManagerFactory
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("formationjpa");
        // Création EntityManager
        EntityManager em = emf.createEntityManager();
        // Création de la transaction
        EntityTransaction tx = em.getTransaction();

        Pizza margarita = Pizza.builder().nom("Pizza Margarita").prix(12).build();
        Pizza flam = Pizza.builder().base(Base.BLANCHE).nom("Tarte flambée flammekueche").prix(13.5).build();
        Ingredient lardons = new Ingredient("Lardons");
        
        flam.add

//        Ingredient i2 = new Ingredient("Champignons");
//        Ingredient i3 = new Ingredient("Poivrons");
//        Ingredient i4 = new Ingredient("Oignons");

        LocalTime heureCommande = LocalTime.of(19, 30);
        LocalTime heureLivraison = LocalTime.of(20, 00);

        Commande c1 = new Commande(heureCommande, heureLivraison);
        Commande c2 = new Commande(heureCommande, heureLivraison);

        try {
            tx.begin();

            em.persist(margarita);
            em.persist(flam);

//            em.persist(i2);
//            em.persist(i3);
//            em.persist(i4);

            em.persist(c1);
            em.persist(c2);

            margarita.setPrix(margarita.getPrix() * 1.1);
            flam.setPrix(flam.getPrix() * 1.1);

            tx.commit();
        } catch (Exception e) {
            tx.rollback();
            e.printStackTrace();
        }

        em.close();
        emf.close();
    }
}
